@import url("https://fonts.googleapis.com/css2?family=Cairo:wght@200..1000&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap");
@import "tailwindcss";

@theme {
  /* fonts */
  --font-cairo: "Cairo", sans-serif;
  --font-inter: "Inter", sans-serif;

  /* colors */
  --color-main-color: #8cbb26;
  --color-main-color-700: #6D921E;
  --color-stroke: #d7d7d7;
  --color-mainSectionColor: #f5f8fb;
  --color-glassy-color: #e0e0e080;


  --section-padding:60px;
}

/* HTML: <div class="inverted-radius"></div> */
.inverted-radius {
  --r: 20px; /* the radius */
  --s: 30px; /* size of inner curve */
  --x: 20px; /* horizontal offset (no percentage) */
  --y: 10px; /* vertical offset (no percentage) */

  aspect-ratio: 1;
  --_m: /calc(2 * var(--r)) calc(2 * var(--r)) radial-gradient(#000 70%, #0000
        72%);
  --_g: conic-gradient(
    from 180deg at var(--r) calc(100% - var(--r)),
    #0000 25%,
    #000 0
  );
  --_d: (var(--s) + var(--r));
  mask: calc(var(--_d) + var(--x)) 100% var(--_m),
    0 calc(100% - var(--_d) - var(--y)) var(--_m),
    radial-gradient(var(--s) at 0 100%, #0000 99%, #000 calc(100% + 1px))
      calc(var(--r) + var(--x)) calc(-1 * var(--r) - var(--y)),
    var(--_g) calc(var(--_d) + var(--x)) 0,
    var(--_g) 0 calc(-1 * var(--_d) - var(--y));
  mask-repeat: no-repeat;
}

.container {
  width: 100%;
  @media (width >= 40rem /* 640px */) {
    max-width: 40rem /* 640px */;
  }
  @media (width >= 48rem /* 768px */) {
    max-width: 48rem /* 768px */;
  }
  @media (width >= 64rem /* 1024px */) {
    max-width: 64rem /* 1024px */;
  }
  @media (width >= 80rem /* 1280px */) {
    max-width: 80rem /* 1280px */;
    padding: 0 60px !important ;
  }
  @media (width >= 96rem /* 1536px */) {
    max-width: 96rem /* 1536px */;
  }
}



/* HTML: <div class="star"></div> */
.star {
  width: 18px;
  aspect-ratio: 1;
  background: #FACC15;
  clip-path: polygon(50% 0,
    calc(50%*(1 + sin(.4turn))) calc(50%*(1 - cos(.4turn))),
    calc(50%*(1 - sin(.2turn))) calc(50%*(1 - cos(.2turn))),
    calc(50%*(1 + sin(.2turn))) calc(50%*(1 - cos(.2turn))),
    calc(50%*(1 - sin(.4turn))) calc(50%*(1 - cos(.4turn))) 
   ); 
  /* or more simple
  clip-path: polygon(50% 0,79% 90%,2% 35%,98% 35%,21% 90%); 
   */
}